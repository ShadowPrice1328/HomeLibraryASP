// <auto-generated />
using System;
using BookLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookLibrary.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookLibrary.Models.Author", b =>
                {
                    b.Property<int>("IdAuthor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Author");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAuthor"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.HasKey("IdAuthor")
                        .HasName("PK__Authors__83F33C8BE57BC1D3");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            IdAuthor = 1,
                            FirstName = "George",
                            LastName = "Orwell"
                        },
                        new
                        {
                            IdAuthor = 2,
                            FirstName = "Aldous",
                            LastName = "Huxley"
                        });
                });

            modelBuilder.Entity("BookLibrary.Models.Book", b =>
                {
                    b.Property<int>("IdBook")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Book");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBook"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<bool>("Lent")
                        .HasColumnType("bit");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<DateOnly>("Year")
                        .HasColumnType("date");

                    b.HasKey("IdBook")
                        .HasName("PK__Books__DE8DF038131185EC");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            IdBook = 1,
                            Description = "A dystopian novel by George Orwell.",
                            Image = "1984.jpg",
                            Lent = false,
                            Source = "Purchased",
                            Title = "1984",
                            Year = new DateOnly(1949, 1, 1)
                        },
                        new
                        {
                            IdBook = 2,
                            Description = "A dystopian novel by Aldous Huxley.",
                            Image = "BraveNewWorld.jpg",
                            Lent = false,
                            Source = "Gifted",
                            Title = "Brave New World",
                            Year = new DateOnly(1932, 1, 1)
                        });
                });

            modelBuilder.Entity("BookLibrary.Models.Genre", b =>
                {
                    b.Property<int>("IdGenre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Genre");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGenre"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.HasKey("IdGenre")
                        .HasName("PK__Genres__7B31A83B8DE42542");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            IdGenre = 1,
                            Name = "Novel"
                        },
                        new
                        {
                            IdGenre = 2,
                            Name = "Dystopian"
                        });
                });

            modelBuilder.Entity("BooksAuthor", b =>
                {
                    b.Property<int>("IdBook")
                        .HasColumnType("int")
                        .HasColumnName("ID_Book");

                    b.Property<int>("IdAuthor")
                        .HasColumnType("int")
                        .HasColumnName("ID_Author");

                    b.HasKey("IdBook", "IdAuthor")
                        .HasName("PK__Books_Au__76B2C3F0211F3A8B");

                    b.HasIndex("IdAuthor");

                    b.ToTable("Books_Authors", (string)null);
                });

            modelBuilder.Entity("BooksGenre", b =>
                {
                    b.Property<int>("IdBook")
                        .HasColumnType("int")
                        .HasColumnName("ID_Book");

                    b.Property<int>("IdGenre")
                        .HasColumnType("int")
                        .HasColumnName("ID_Genre");

                    b.HasKey("IdBook", "IdGenre")
                        .HasName("PK__Books_Ge__793EEABB2917F912");

                    b.HasIndex("IdGenre");

                    b.ToTable("Books_Genres", (string)null);
                });

            modelBuilder.Entity("BooksAuthor", b =>
                {
                    b.HasOne("BookLibrary.Models.Author", null)
                        .WithMany()
                        .HasForeignKey("IdAuthor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Books_Authors__Authors");

                    b.HasOne("BookLibrary.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("IdBook")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Books_Authors__Books");
                });

            modelBuilder.Entity("BooksGenre", b =>
                {
                    b.HasOne("BookLibrary.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("IdBook")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Books_Genres__Books");

                    b.HasOne("BookLibrary.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("IdGenre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Books_Genres__Genres");
                });
#pragma warning restore 612, 618
        }
    }
}
